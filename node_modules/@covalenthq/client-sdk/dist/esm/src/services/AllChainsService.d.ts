import { type Execution } from "../utils/functions/execution";
import { type GetMultiChainAndMultiAddressTransactionsParamOtps, type MultiChainMultiAddressTransactionsResponse } from "../utils/types/AllChainService.types";
import { type GoldRushResponse } from "../utils/types/Generic.types";
/**
 * Cross Chain API
 *
 */
export declare class AllChainsService {
    private execution;
    constructor(execution: Execution);
    /**
     *
     * Commonly used to get transactions cross chains and addresses.
     *
     * @param {Chain[]} chains - An array of the chain names or IDs to retrieve transactions from. Defaults to all foundational chains.
     * @param {string[]} addresses - An array of addresses for which transactions are fetched. Does not support name resolution.
     * @param {number} limit - Number of transactions to return per page, up to the default max of 100 items.
     * @param {string} before - Pagination cursor pointing to fetch transactions before a certain point.
     * @param {string} after - Pagination cursor pointing to fetch transactions after a certain point.
     * @param {boolean} withLogs - Whether to include raw logs in the response.
     * @param {boolean} withDecodedLogs - Whether to include decoded logs in the response.
     * @param {Quote | "BTC" | "ETH"} quoteCurrency - The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, `GBP`, "BTC" and "ETH".
     *
     */
    getMultiChainAndMultiAddressTransactions(queryParamOpts?: GetMultiChainAndMultiAddressTransactionsParamOtps): Promise<GoldRushResponse<MultiChainMultiAddressTransactionsResponse>>;
}
